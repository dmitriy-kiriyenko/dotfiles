fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n$fmt\n" "$@"
}

brew_install_or_upgrade() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      fancy_echo "Upgrading %s ..." "$1"
      brew upgrade "$@"
    else
      fancy_echo "Already using the latest version of %s. Skipping ..." "$1"
    fi
  else
    fancy_echo "Installing %s ..." "$1"
    brew install "$@"
  fi
}

brew_is_installed() {
  local name="$(brew_expand_alias "$1")"

  brew list -1 | grep -Fqx "$name"
}

brew_is_upgradable() {
  local name="$(brew_expand_alias "$1")"

  ! brew outdated --quiet "$name" >/dev/null
}

local -a _1st_arguments
_1st_arguments=(
  'install:install a formula'
  'remove:remove a formula'
  'search:search for a formula (/regex/ or string)'
  'list:list files in a formula or not-installed formulae'
  'link:link a formula'
  'unlink:unlink a formula'
  'home:visit the homepage of a formula or the brew project'
  'info:information about a formula'
  'prune:remove dead links'
  'update:freshen up links'
  'log:git commit log for a formula'
  'create:create a new formula'
  'edit:edit a formula'
  'bundle:install or upgrade all dependencies in a Brewfile'
)

local -a _bundle_arguments
_bundle_arguments=(
  'dump:write all installed casks/formulae/taps into a Brewfile'
  'cleanup:uninstall all dependencies not listed in a Brewfile'
  'check:check if all dependencies are installed in a Brewfile'
)

brew_tap() {
  brew tap "$1" 2> /dev/null
}

brew_expand_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_launchctl_restart() {
  local name="$(brew_expand_alias "$1")"
  local domain="homebrew.mxcl.$name"
  local plist="$domain.plist"

  fancy_echo "Restarting %s ..." "$1"
  mkdir -p "$HOME/Library/LaunchAgents"
  ln -sfv "/usr/local/opt/$name/$plist" "$HOME/Library/LaunchAgents"

<<<<<<< HEAD
case "$words[1]" in
  list)
    _arguments \
      '(--unbrewed)--unbrewed[files in brew --prefix not controlled by brew]' \
      '1: :->forms' &&  return 0
      
      if [[ "$state" == forms ]]; then
        _brew_installed_formulae
        _requested installed_formulae expl 'installed formulae' compadd -a installed_formulae
      fi
  ;;
  install|home|log|info)
    _brew_all_formulae
    _wanted formulae expl 'all formulae' compadd -a formulae
  ;;
  remove|edit|xo)
    _brew_installed_formulae
    _wanted installed_formulae expl 'installed formulae' compadd -a installed_formulae
  ;;
  bundle)
    _describe 'values' _bundle_arguments
  ;;
esac
=======
  if launchctl list | grep -Fq "$domain"; then
    launchctl unload "$HOME/Library/LaunchAgents/$plist" >/dev/null
  fi
  launchctl load "$HOME/Library/LaunchAgents/$plist" >/dev/null
}
>>>>>>> Funny tweaks for brew.
